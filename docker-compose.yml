version: '3.9'
services:
  ruuter:
    container_name: byk-private-ruuter
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:3001, http://localhost:3002
    volumes:
      - ./DSL/Ruuter.private:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8080:8080
    networks:
      - bykstack
  resql:
    container_name: byk-resql
    image: resql
    ports:
      - 8082:8082
    volumes:
      - ./DSL/Resql:/workspace/app/templates/
    networks:
      - bykstack
  opensearch-node:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node # Name the node that will run in this container
      - discovery.type=single-node
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - bykstack # All of the containers will join the same Docker bridge network
  node:
    container_name: node
    build:
      context: ./DSL/DataMapper
    volumes:
      - ./mock1:/mock1
      - ../Service-Module/DSL/mock1:/mock2
      - ./DSL/DataMapper/views:/workspace/app/views/training
      - ./DSL/DataMapper/views:/workspace/app/js/analytics
    ports:
      - 3000:3000
    networks:
      - bykstack
  training_gui:
    container_name: training_gui
    build:
      context: ./GUI
      target: web
      dockerfile: Dockerfile
    ports:
      - 3001:80
    volumes:
      - /app/node_modules
      - ./GUI:/app
    networks:
      - bykstack

  # TIM part is commented out in case a developer needs to run just the training module part
  # tim:
  #  container_name: tim
  #  image: tim
  #  depends_on:
  #    - tim-postgresql
  #  ports:
  #    - 8085:8085
  #  networks:
  #    - bykstack
  #  extra_hosts:
  #    - "host.docker.internal:host-gateway"
  #  cpus: "0.5"  (Example CPU limit)
  #  mem_limit: "512M"  (Example memory limit)

  # tim-postgresql:
  #  container_name: tim-postgresql
  #  image: postgres:14.1
  #  environment:
  #    - POSTGRES_USER=tim
  #    - POSTGRES_PASSWORD=123
  #    - POSTGRES_DB=tim
  #    - POSTGRES_HOST_AUTH_METHOD=trust
  #  volumes:
  #    - ./tim-db:/var/lib/postgresql/data
  #  ports:
  #    - 9876:5432
  #  networks:
  #    - bykstack
  pipelines:
    container_name: pipelines
    build:
      context: ./DSL/Pipelines
    environment:
      - OPENSEARCH_PROTOCOL=http
    ports:
      - 3010:3010
    networks:
      - bykstack

volumes:
  opensearch-data:
networks:
  bykstack:
    name: bykstack
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400
