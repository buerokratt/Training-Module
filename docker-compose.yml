version: "3.9"
services:
  ruuter:
    container_name: ruuter
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:3001,http://localhost:3002
      - server.port=8080
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
    volumes:
      - ./DSL/Ruuter.private:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8080:8080
    networks:
      - bykstack

  database:
    container_name: database
    image: postgres:14.1
    environment:
      - POSTGRES_USER=byk
      - POSTGRES_PASSWORD=01234
      - POSTGRES_DB=training_db
    ports:
      - 5433:5432
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - bykstack

  resql:
    container_name: resql
    image: resql
    depends_on:
      - database
    environment:
      - sqlms.datasources.[0].name=training
      # - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://database:5432/training_db // For Local Use
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5434/train_db
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=01234
      - logging.level.org.springframework.boot=INFO
      - server.port=8082
    ports:
      - 8082:8082
    volumes:
      - ./DSL/Resql/training:/workspace/app/templates/training
    networks:
      - bykstack

  resql_services:
    container_name: resql-services
    image: resql
    depends_on:
      - database
    environment:
      - sqlms.datasources.[0].name=services
      # - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://database:5432/services_db // For Local Use
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5435/services_db
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=01234
      - logging.level.org.springframework.boot=INFO
      - server.port=8087
    ports:
      - 8087:8087
    volumes:
      - ./DSL/Resql/services:/workspace/app/templates/services
    networks:
      - bykstack

  resql_users:
    container_name: resql-users
    image: resql
    depends_on:
      - database
    environment:
      - server.port=8088
      - sqlms.datasources.[0].name=users
      # - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://database:5432/users_db // For Local Use
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5433/byk
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=2nH09n6Gly
      - logging.level.org.springframework.boot=INFO
    ports:
      - 8088:8088
    volumes:
      - ./DSL/Resql/users:/workspace/app/templates/users
    networks:
      - bykstack

  data_mapper:
    container_name: data_mapper
    build:
      context: ./DSL/DataMapper
    volumes:
      - ./mock1:/mock1
      - ./docker-compose-bot.yml:/docker-bot/docker-compose-bot.yml
      - ./DSL/CronManager:/DSL/CronManager
      - ../Service-Module/DSL/mock1:/mock2
      - ./DSL/DataMapper/views:/workspace/app/views/training
      - ./DSL/DataMapper/views:/workspace/app/js/analytics
    ports:
      - 3000:3000
    networks:
      - bykstack

  training_gui:
    container_name: training_gui
    build:
      context: ./GUI
      # target: web // To be used in production (Dockerfile)
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3001
    volumes:
      - /app/node_modules
      - ./GUI:/app
    networks:
      - bykstack

  tim:
    container_name: tim
    image: tim
    depends_on:
      - tim-postgresql
    ports:
      - 8085:8085
    networks:
      - bykstack
    extra_hosts:
      - "host.docker.internal:host-gateway"
    cpus: "0.5" #(Example CPU limit)
    mem_limit: "512M" #(Example memory limit)

  tim-postgresql:
    container_name: tim-postgresql
    image: postgres:14.1
    environment:
      - POSTGRES_USER=tim
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=tim
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./tim-db:/var/lib/postgresql/data
    ports:
      - 9876:5432
    networks:
      - bykstack

  pipelines:
    container_name: pipelines
    build:
      context: ./DSL/Pipelines
    environment:
      - OPENSEARCH_PROTOCOL=http
    ports:
      - 3010:3010
    networks:
      - bykstack

  cron-manager:
    container_name: cron-manager
    image: cron-manager
    volumes:
      - ./DSL/CronManager:/DSL
    environment:
      - server.port=9010
    ports:
      - 9010:9010
    networks:
      - bykstack

  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - node.name=opensearch
      - discovery.seed_hosts=opensearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - plugins.security.disabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - bykstack

volumes:
  opensearch-data:
networks:
  bykstack:
    name: bykstack
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400
