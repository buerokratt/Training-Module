declaration:
  call: declare
  version: 0.1
  description: "Decription placeholder for 'DELETE'"
  method: post
  accepts: json
  returns: json
  namespace: training
  allowlist:
    body:
      - field: response
        type: string
        description: "Body field 'response'"
    headers:
      - field: cookie
        type: string
        description: "Cookie field"

assign_values:
  assign:
    parameters: ${incoming.body}
    responseName: ${incoming.body.response}

getDomainFile:
  call: http.get
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/internal/domain-file"
    headers:
      cookie: ${incoming.headers.cookie}
  result: domainData

validateResponse:
  switch:
    - condition: ${domainData.response.body.response.responses[responseName] != null}
      next: ruleResponses
  next: returnResponseIsMissing

ruleResponses:
  call: http.post
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/rasa/rules/search"
    headers:
      cookie: ${incoming.headers.cookie}
    body:
      value: ${responseName}
      type: "responses"
  result: ruleResponses

validateRuleResponses:
  switch:
    - condition: ${ruleResponses.response.body.response != undefined && ruleResponses.response.body.response.length > 0}
      next: returnResponseHasDependencyToRules
  next: storiesResponses

storiesResponses:
  call: http.post
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/rasa/stories/search"
    headers:
      cookie: ${incoming.headers.cookie}
    body:
      value: ${responseName}
      type: "responses"
  result: storiesResponses

validateStoriesResponses:
  switch:
    - condition: ${storiesResponses.response.body.response != undefined && storiesResponses.response.body.response.length > 0}
      next: returnResponseHasDependencyToStories
  next: deleteKey

deleteKey:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/merge/remove-key"
    body:
      object: ${domainData.response.body.response.responses}
      key: ${responseName}
  result: keyDeletedData

convertJsonToYaml:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/conversion/json_to_yaml"
    body:
      version: ${domainData.response.body.response.version}
      intents: ${domainData.response.body.response.intents}
      entities: ${domainData.response.body.response.entities}
      slots: ${domainData.response.body.response.slots}
      forms: ${domainData.response.body.response.forms}
      actions: ${domainData.response.body.response.actions}
      responses: ${keyDeletedData.response.body}
      session_config: ${domainData.response.body.response.session_config}
  result: domainYaml

getFileLocations:
  call: http.get
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/internal/return-file-locations"
    headers:
      cookie: ${incoming.headers.cookie}
  result: fileLocations

saveDomainFile:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/file-manager/create"
    body:
      file_path: ${fileLocations.response.body.response.domain_location}
      content: ${domainYaml.response.body.json}
  result: fileResult
  next: updateOpenSearch

updateOpenSearch:
  call: http.post
  args:
    url: "[#TRAINING_PIPELINE]/bulk/domain"
    body:
      input: ${domainYaml.response.body.json}
  result: updateSearchResult
  next: returnSuccess

returnSuccess:
  return: "Response deleted"
  next: end

returnResponseIsMissing:
  return: "Can't find response to delete"
  status: 409
  next: end

returnResponseHasDependencyToRules:
  return: "Deleting a response is forbidden because it has relation to rules"
  status: 409
  next: end

returnResponseHasDependencyToStories:
  return: "Deleting a response is forbidden because it has relation to stories"
  status: 409
  next: end
