assign_values:
  assign:
    params: ${incoming.body}

authenticate:
  template: extract-token
  requestType: post
  headers:
    cookie: ${incoming.headers.cookie}
  body:
    role: "ROLE_ADMINISTRATOR"
  result: permission

validatePermission:
  switch:
    - condition: ${permission}
      next: getResponsesWithNameAndText
  next: returnUnauthorized

getResponsesWithNameAndText:
  call: http.post
  args:
    url: http://host.docker.internal:9200/responses/_search/template
    body:
      id: "response-with-name-and-text"
      params: ${params}
  result: getResponsesResult

validateResponse:
  switch:
    - condition: ${getResponsesResult.response.body.hits.hits.length > 0}
      next: ruleResponses
  next: returnResponseIsMissing

ruleResponses:
  call: http.post
  args:
    url: http://localhost:8080/rasa/rules/search
    headers:
      cookie: ${cookie}
    body:
      response: ${params.response_name}
      type: "responses"
  result: ruleResponses

storiesResponses:
  call: http.post
  args:
    url: http://localhost:8080/rasa/stories/search
    headers:
      cookie: ${cookie}
    body:
      response: ${params.response_name}
      type: "responses"
  result: storiesResponses

mapResponsesData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-response-dependencies
    body:
      response: ${getResponsesResult.response.body.hits.hits}
      stories: ${storiesResponses.response.body.response.stories}
      rules: ${ruleResponses.response.body.response.rules}
  result: responsesData
  next: returnSuccess

returnSuccess:
  return: ${responsesData.response.body}
  next: end

returnResponseIsMissing:
  return: "Can't find response"
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end
