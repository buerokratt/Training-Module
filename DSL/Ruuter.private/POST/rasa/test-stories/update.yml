assign_values:
  assign:
    parameters: ${incoming.body}
  next: getTestStoriesWithName

getTestStoriesWithName:
  call: http.post
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/rasa/test-stories"
    headers:
      cookie: ${incoming.headers.cookie}
    body:
      story: ${parameters.story}
  result: testStoriesResult

validateTestStories:
  switch:
    - condition: ${testStoriesResult.response.body.response.stories.length != 0}
      next: getFileLocations
  next: returnTestStoryIsMissing

getFileLocations:
  call: http.get
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/internal/return-file-locations"
    headers:
      cookie: ${incoming.headers.cookie}
  result: fileLocations

getStoriesFile:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/file-manager/read-file"
    body:
      file_path: ${fileLocations.response.body.response.test_stories_location}
  result: testStoriesFile

convertYamlToJson:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/conversion/yaml_to_json"
    body:
      file: ${testStoriesFile.response.body.file}
  result: testStoriesData

mergeStories:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/file-manager/merge"
    body:
      array1: ${testStoriesData.response.body.stories}
      array2: ${[parameters]}
      iteratee: "story"
  result: mergedTestStories

convertJsonToYaml:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/conversion/json_to_yaml"
    body:
      stories: ${mergedTestStories.response.body}
  result: testStoriesYaml

saveFile:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/file-manager/create"
    body:
      file_path: ${fileLocations.response.body.response.test_stories_location}
      content: ${testStoriesYaml.response.body.json}
  result: fileResult
  next: returnSuccess

returnSuccess:
  return: "Test-story updated"
  next: end

returnTestStoryIsMissing:
  return: "Can't find test-story to update"
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end

