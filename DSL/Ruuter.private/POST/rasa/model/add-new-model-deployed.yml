declaration:
  call: declare
  version: 0.1
  description: "Adds a new model to the database with DEPLOYED status"
  method: post
  accepts: json
  returns: json
  namespace: training
  allowlist:
    body:
      - field: fileName
        type: string
        description: "Trained model file name"

getModelByFilenameFromDb:
  call: http.post
  args:
    url: "[#TRAINING_RESQL]/get-llm-model-by-filename"
    body:
      fileName: ${incoming.body.fileName}
  result: dbResult

updateInDatabase:
  call: http.post
  args:
    url: "[#TRAINING_RESQL]/add-llm-trainings"
    body:
      model_type: ${dbResult.response.body[0].modelType}
      state: "DEPLOYED"
      file_name: ${dbResult.response.body[0].fileName}
      version_number: ${dbResult.response.body[0].versionNumber}
      model_version: ${dbResult.response.body[0].modelVersion}
      test_report: ${dbResult.response.body[0].testReport}
      cross_validation_report: ${dbResult.response.body[0].crossValidationReport}
      trained_date: ${dbResult.response.body[0].trainedDate}
      training_data_checksum: ""
  result: dbModelResult

returnSuccess:
  return: "Inserted model with DEPLOYED status."
  wrapper: false
  next: end
