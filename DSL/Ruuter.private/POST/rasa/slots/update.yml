assign_values:
  assign:
    parameters: ${incoming.body}
    oldKey: ${parameters.oldName}
    newKey: ${Object.keys(parameters.slot.slot)[0]}
    newValue: ${parameters.slot.slot[newKey]}
  next: getDomainFile

getDomainFile:
  call: http.get
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/domain-file"
    headers:
      cookie: ${incoming.headers.cookie}
  result: domainData

validateSlots:
  switch:
    - condition: ${domainData.response.body.response.slots[oldKey] != null}
      next: mergeSlots
  next: returnSlotIsMissing

mergeSlots:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/object/replace/key-value-in-obj"
    body:
      object: ${domainData.response.body.response.slots}
      oldKey: ${oldKey}
      newKey: ${newKey}
      newValue: ${newValue}
  result: updatedSlots

convertJsonToYaml:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/conversion/json_to_yaml"
    body:
      version: ${domainData.response.body.response.version}
      intents: ${domainData.response.body.response.intents}
      entities: ${domainData.response.body.response.entities}
      slots: ${updatedSlots.response.body}
      forms: ${domainData.response.body.response.forms}
      actions: ${domainData.response.body.response.actions}
      responses: ${domainData.response.body.response.responses}
      session_config: ${domainData.response.body.response.session_config}
  result: domainYaml

getFileLocations:
  call: http.get
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/return-file-locations"
    headers:
      cookie: ${incoming.headers.cookie}
  result: fileLocations

saveDomainFile:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/file-manager/create"
    body:
      file_path: ${fileLocations.response.body.response.domain_location}
      content: ${domainYaml.response.body.json}
  result: fileResult
  next: updateRegexOpenSearch

updateRegexOpenSearch:
  call: http.post
  args:
    url: "[#TRAINING_PIPELINE]/bulk/domain"
    body:
      input: ${domainYaml.response.body.json}
  result: returnSuccess

returnSuccess:
  return: "Slot updated"
  next: end

returnSlotIsMissing:
  return: "Can't find slot to update"
  wrapper: false
  status: 409
  next: end
