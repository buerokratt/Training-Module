assign_values:
  assign:
    body: ${incoming.body}

extractRequestData:
  assign:
    cookie: ${incoming.headers.cookie}

extractTokenData:
  call: http.post
  args:
    # TODO: replace with env variable and correct path to TIM endpoint
    url: http://localhost:8080/mock-tim-custom-jwt-userinfo
    headers:
      cookie: ${cookie}
    body:
      # TODO: pass cookie name correctly to TIM
      cookieName: "customJwtCookie"
  result: jwtResult

validateAdministrator:
  switch:
    # TODO: use correct structure when request is made against TIM
    - condition: ${jwtResult.response.body.response.authorities.includes("ROLE_ADMINISTRATOR")}
      next: switchRulesSearchType
  next: returnUnauthorized

switchRulesSearchType:
  switch:
    - condition: ${body.type.includes("slots")}
      next: getRulesSearchSlots
    - condition: ${body.type.includes("forms")}
      next: getRulesSearchForms
    - condition: ${body.type.includes("responses")}
      next: getRulesSearchResponses

getRulesSearchSlots:
  call: http.get
  args:
    url: http://host.docker.internal:9200/rules-search/_search
  result: getRulesSearchResultSlots
  next: mapRulesSearchSlotsData

getRulesSearchForms:
  call: http.post
  args:
    url: http://host.docker.internal:9200/rules-search/_search/template
    body:
      id: "rules-with-suffix-form"
  result: getRulesSearchResultForms
  next: mapRulesSearchFormsData

getRulesSearchResponses:
  call: http.post
  args:
    url: http://host.docker.internal:9200/rules-search/_search/template
    body:
      id: "rules-with-prefix-utter"
  result: getRulesSearchResultResponses
  next: mapRulesSearchResponsesData

mapRulesSearchSlotsData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-rules-search-slots
    body:
      hits: ${getRulesSearchResultSlots.response.body.hits.hits}
  result: rulesSearchData
  next: returnSuccess

mapRulesSearchFormsData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-rules-search-forms
    body:
      hits: ${getRulesSearchResultForms.response.body.hits.hits}
  result: rulesSearchData
  next: returnSuccess

mapRulesSearchResponsesData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-rules-search-responses
    body:
      hits: ${getRulesSearchResultResponses.response.body.hits.hits}
  result: rulesSearchData
  next: returnSuccess

returnSuccess:
  return: ${rulesSearchData.response.body}
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end
