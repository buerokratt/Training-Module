assign_values:
  assign:
    params: ${incoming.body}
    cookie: ${incoming.headers.cookie}

extractTokenData:
  call: http.post
  args:
    url: http://localhost:8080/mock-tim-custom-jwt-userinfo
    headers:
      cookie: ${cookie}
    body:
      cookieName: "customJwtCookie"
  result: jwtResult

validateAdministrator:
  switch:
    - condition: ${jwtResult.response.body.response.authorities.includes("ROLE_ADMINISTRATOR")}
      next: switchRulesType
  next: returnUnauthorized

switchRulesType:
  switch:
    - condition: ${params.type.includes("slots")}
      next: getRulesSlots
    - condition: ${params.type.includes("forms")}
      next: getRulesForms
    - condition: ${params.type.includes("responses")}
      next: getRulesResponses

getRulesSlots:
  call: http.post
  args:
    url: http://host.docker.internal:9200/rules/_search/template
    body:
      id: "rule-with-slot"
      params: ${params}
  result: getRulesResultSlots
  next: mapRulesSlotsData

mapRulesSlotsData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-rules-search-slots
    body:
      hits: ${getRulesResultSlots.response.body.hits.hits}
  result: rulesData
  next: returnSuccess

getRulesForms:
  call: http.post
  args:
    url: http://host.docker.internal:9200/rules/_search/template
    body:
      id: "rule-with-form"
      params: ${params}
  result: getRulesResultForms
  next: mapRulesFormsData

mapRulesFormsData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-rules-search-forms
    body:
      hits: ${getRulesResultForms.response.body.hits.hits}
  result: rulesData
  next: returnSuccess

getRulesResponses:
  call: http.post
  args:
    url: http://host.docker.internal:9200/rules/_search/template
    body:
      id: "rule-with-response"
      params: ${params}
  result: getRulesResultResponses
  next: mapRulesResponsesData

mapRulesResponsesData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-rules-search-responses
    body:
      hits: ${getRulesResultResponses.response.body.hits.hits}
  result: rulesData
  next: returnSuccess

returnSuccess:
  return: ${rulesData.response.body}
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end
