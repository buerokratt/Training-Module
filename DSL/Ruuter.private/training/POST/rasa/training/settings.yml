declaration:
  call: declare
  version: 0.1
  description: "Decription placeholder for 'SETTINGS'"
  method: post
  accepts: json
  returns: json
  namespace: training
  allowlist:
    body:
      - field: daysOfWeek
        type: string
        description: "Body field 'daysOfWeek'"
      - field: fromDate
        type: string
        description: "Body field 'fromDate'"
      - field: modifierId
        type: string
        description: "Body field 'modifierId'"
      - field: modifierName
        type: string
        description: "Body field 'modifierName'"
      - field: rasaFolds
        type: string
        description: "Body field 'rasaFolds'"
      - field: scheduled
        type: string
        description: "Body field 'scheduled'"
    headers:
      - field: cookie
        type: string
        description: "Cookie field"

assignValues:
  assign:
    daysOfWeek: ${incoming.body.daysOfWeek}
    fromDate: ${incoming.body.fromDate}
    rasaFolds: ${incoming.body.rasaFolds ?? 8}
    scheduled: ${incoming.body.scheduled}
    modifierId: ${incoming.body.modifierId}
    modifierName: ${incoming.body.modifierName}

updateInDatabase:
  call: http.post
  args:
    url: "[#TRAINING_RESQL]/add-train-settings"
    body:
      days_of_week: ${daysOfWeek}
      from_date: ${fromDate}
      rasa_folds: ${rasaFolds}
      scheduled: ${scheduled}
      modifier_id: ${modifierId}
      modifier_name: ${modifierName}
  result: dbResult

syncCronTask:
  call: http.post
  args:
    url: "[#TRAINING_PUBLIC_RUUTER_INTERNAL]/internal/sync/cron"
    headers:
      cookie: ${incoming.headers.cookie}
  result: updatedCron

returnSuccess:
  return: 'Updated Successfully.'
  wrapper: false
  next: end
