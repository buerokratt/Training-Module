declaration:
  call: declare
  version: 0.1
  description: "Decription placeholder for 'ENDED-CHATS'"
  method: post
  accepts: json
  returns: json
  namespace: training
  allowlist:
    body:
      - field: endDate
        type: string
        description: "Body field 'endDate'"
      - field: startDate
        type: string
        description: "Body field 'startDate'"
      - field: page
        type: number
        description: "Body field 'page'"
      - field: page_size
        type: number
        description: "Body field 'page_size'"
      - field: sorting
        type: string
        description: "Body field 'sorting'"
      - field: search
        type: string
        description: "Body field 'search'"
      - field: customerSupportIds
        type: array
        description: "Body field 'customerSupportIds'"

extractRequestData:
  assign:
    startDate: "${incoming.body.startDate}"
    endDate: "${incoming.body.endDate}"

getTitleVisibility:
  call: http.get
  args:
    url: "[#TRAINING_USERS_RESQL]/config/get_configuration"
    query:
      key: "is_csa_title_visible"
  result: title_res

getChatNps:
  call: http.get
  args:
    url: "[#TRAINING_USERS_RESQL]/chat/get_chat_nps"
  result: chatNps

getUsers:
  call: http.get
  args:
    url: "[#TRAINING_USERS_RESQL]/auth_users/list_users_display_name"
  result: users

getEndedChats:
  call: http.get
  args:
    url: "[#TRAINING_USERS_RESQL]/chat/list_chats_cs_ended"
    query:
      start: ${startDate}
      end: ${endDate}
      page: ${incoming.body.page}
      page_size: ${incoming.body.page_size}
      sorting: ${incoming.body.sorting}
      search: ${incoming.body.search}
      customerSupportIds: ${incoming.body.customerSupportIds?.join(',') ?? ''}
      is_csa_title_visible: ${title_res.response.body[0]?.value}
  result: res

enrich_chats_with_nps:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER_HBS]/enrich_denormalized_chats_with_nps_and_users_data"
    headers:
      type: json
    body:
      chatMessagesRes: ${res.response.body}
      nps: ${chatNps.response.body[0].nps}
      users: ${users.response.body}
  result: res

returnSuccess:
  return: ${res.response.body}
  next: end
