declaration:
  call: declare
  version: 0.1
  description: "Decription placeholder for 'COUNT'"
  method: get
  accepts: json
  returns: json
  namespace: training
  allowlist:
    headers:
      - field: cookie
        type: string
        description: "Cookie field"
    params:
      - field: prefix
        type: string
        description: "Prefix to filter intents"

assignValues:
  assign:
    prefix: ${incoming.params.prefix}

getIntentsExampleCount:
  call: http.post
  args:
    url: "[#TRAINING_OPENSEARCH]/intents/_search/template"
    body:
      id: "intents-with-examples-count"
      params:
        prefix: ${prefix || ''}
  result: getIntentsResult

getDomainFile:
  call: http.get
  args:
    url: "[#TRAINING_PUBLIC_RUUTER]/internal/domain-file"
    headers:
      cookie: ${incoming.headers.cookie}
  result: getDomainDataResult

getIntentsNames:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/hbs/training/get_intent_names_from_example_counts"
    headers:
      type: "json"
    body:
      hits: ${getIntentsResult.response.body.aggregations.hot.buckets}
  result: getIntentsNamesResult

getIntentListLastChanged:
  call: http.post
  args:
    url: "[#TRAINING_RESQL]/get-intents-list-last-changed"
    body:
      intentsList: ${getIntentsNamesResult.response.body.intents}
  result: getIntentsListLastChangedResult

mapIntentsData:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/hbs/training/get_intents_with_examples_count"
    headers:
      type: "json"
    body:
      buckets: ${getIntentsResult.response.body.aggregations.hot.buckets}
      intents:
        inmodel: ${getDomainDataResult.response.body.response.intents}
        intentsModifiedAt: ${getIntentsListLastChangedResult.response.body}
  result: intentsData
  next: returnSuccess

returnSuccess:
  return: ${intentsData.response.body}
  next: end
