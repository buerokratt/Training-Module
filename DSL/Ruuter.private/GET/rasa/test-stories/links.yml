authenticate:
  template: extract-token
  requestType: post
  headers:
    cookie: ${incoming.headers.cookie}
  body:
    role: "ROLE_ADMINISTRATOR"
  result: permission

validatePermission:
  switch:
    - condition: ${permission}
      next: getRules
  next: returnUnauthorized

getRules:
  call: http.get
  args:
    url: http://host.docker.internal:9200/rules/_search?size=10000
  result: getRulesResult

getStories:
  call: http.get
  args:
    url: http://host.docker.internal:9200/stories/_search?size=10000
  result: getStoriesResult

getTestStories:
  call: http.get
  args:
    url: http://host.docker.internal:9200/test-stories/_search?size=10000
  result: getTestStoriesResult

mapLinksData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-links
    body:
      rules: ${getRulesResult.response.body.hits.hits}
      stories: ${getStoriesResult.response.body.hits.hits}
      test-stories: ${getTestStoriesResult.response.body.hits.hits}
  result: linksData

returnSuccess:
  return: ${linksData.response.body}
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end
