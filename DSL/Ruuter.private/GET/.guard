process_request:
  switch:
    - condition: ${ incoming.headers['x-ruuter-nonce'] != null }
      next: verify_header_nonce
    - condition: ${ incoming.params['ruuter-nonce'] != null }
      next: verify_param_nonce
  next: authenticate

verify_header_nonce:
  call: http.post
  args:
    url: "[#TRAINING_RESQL]/use-nonce"
    body:
      updated_nonce: ${incoming.headers['x-ruuter-nonce']}
  result: nonce_response
  next: check_inline

verify_param_nonce:
  call: http.post
  args:
    url: "[#TRAINING_RESQL]/use-nonce"
    body:
      updated_nonce: ${incoming.params['ruuter-nonce']}
  result: nonce_response
  next: check_inline

check_inline:
  inline: extAuth
  result: extauth

check_nonce:
  switch:
    - condition: ${ !extauth || (nonce_response.response.body[0] == null) }
      next: guard_fail
  next: guard_success

authenticate:
  template: check-user-authority
  requestType: templates
  headers:
    cookie: ${incoming.headers.cookie}
  result: authority_result
  next: check_authority_result

check_authority_result:
  switch:
    - condition: ${authority_result !== "false"}
      next: guard_success
  next: guard_fail

guard_success:
  return: "success"
  status: 200
  next: end

guard_fail:
  return: "unauthorized"
  status: 403
  next: end
